{"version":3,"sources":["Components/Users/users-reducer.ts","Components/Modal/Modal.tsx","Components/HighLight/HighLight.tsx","Components/Users/User.tsx","Components/UsersList/UsersList.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["initialState","fetchUsersTC","dispatch","fetch","then","res","json","data","type","users","Modal","active","setActive","children","className","onClick","e","preventDefault","HighLight","props","filter","str","regexp","RegExp","matchValue","match","split","map","s","index","array","length","c","shift","User","useState","modalActive","setModalActive","light","useCallback","user","name","username","email","stopPropagation","removeUser","id","address","street","suite","city","zipcode","geo","lat","lng","company","catchPhrase","bs","UsersList","useSelector","state","useDispatch","useEffect","thunk","removeUserAC","setFilter","onChange","value","target","placeholder","u","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27af000e.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\n\r\nexport const initialState: Array<UserType> = []\r\n\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: AddressPropsType\r\n    company: CompanyPropsType\r\n}\r\n\r\ntype AddressPropsType = {\r\n    street: string\r\n    suite: string\r\n    city: string\r\n    zipcode: string\r\n    geo: GeoPropsType\r\n}\r\n\r\ntype GeoPropsType = {\r\n    lat: string\r\n    lng: string\r\n}\r\n\r\ntype CompanyPropsType = {\r\n    name: string\r\n    catchPhrase: string\r\n    bs: string\r\n}\r\n\r\nexport const UsersReducer = (state: Array<UserType> = initialState, action: ActionsType): Array<UserType> => {\r\n    switch (action.type) {\r\n        case 'GET-USERS':\r\n            return action.users\r\n        case 'REMOVE-USER':\r\n            return state.filter(u => u.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeUserAC = (id: string) => ({type: 'REMOVE-USER', id} as const)\r\nexport const getUsersAC = (users: Array<UserType>) => ({type: 'GET-USERS', users} as const)\r\n\r\nexport const fetchUsersTC = () => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(res => res.json())\r\n            .then(data => dispatch(getUsersAC(data)))\r\n    }\r\n}\r\n\r\nexport type RemoveUserActionType = ReturnType<typeof removeUserAC>;\r\nexport type SetUsersActionType = ReturnType<typeof getUsersAC>;\r\n\r\ntype ActionsType = RemoveUserActionType | SetUsersActionType","import React, {Dispatch, SetStateAction} from 'react'\r\nimport './modal.css';\r\n\r\ntype ModalPropsType ={\r\n    active: boolean,\r\n    setActive: Dispatch<SetStateAction<boolean>>,\r\n    children: React.ReactNode\r\n}\r\nexport const Modal: React.FC<ModalPropsType> = ( {active,setActive ,children }) => {\r\n\r\n    return (\r\n        <div className={active ? 'modal active' : 'modal'} onClick={() => setActive(false)}>\r\n            <div className={active ? 'modalContent active' : 'modalContent'} onClick={e => e.preventDefault()}>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './highLight.css'\r\n\r\ntype HighLightPropsType = {\r\n    filter: string\r\n    str: string\r\n}\r\nexport const HighLight: React.FC<HighLightPropsType> = (props) => {\r\n    const {filter, str} = props\r\n    if (!filter) return <>{str}</>\r\n    const regexp = new RegExp(filter, 'ig')\r\n    const matchValue = str.match(regexp)\r\n    if (matchValue) {\r\n\r\n       return <>\r\n           {\r\n               str.split(regexp).map((s, index, array) => {\r\n                   if (index < array.length - 1) {\r\n                       const c = matchValue.shift()\r\n                       return <>{s}<span className={'highlight'}>{c}</span></>\r\n                   }\r\n                   return <span>{s}</span>\r\n               })\r\n           }\r\n       </>\r\n    }\r\n    return <>\r\n         {str}\r\n    </>\r\n}","import {UserType} from \"./users-reducer\";\r\nimport React, {useCallback, useState} from \"react\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport './user.css'\r\nimport {HighLight} from \"../HighLight/HighLight\";\r\n\r\n\r\nexport type UsersPropsType = {\r\n    removeUser: (id: string) => void\r\n    user: UserType\r\n    filter: string\r\n}\r\n\r\nexport const User = (props: UsersPropsType) => {\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    const removeUser: React.MouseEventHandler<HTMLElement> = (e) => {\r\n            e.stopPropagation()\r\n            props.removeUser(props.user.id)\r\n    }\r\n\r\n\r\n    const light = useCallback((str) => {\r\n        return <HighLight filter={props.filter} str={str}/>\r\n    }, [props.filter])\r\n\r\n    return (\r\n        <div className='users-wrapper'>\r\n            <div className='users' onClick={() => {\r\n                setModalActive(true)\r\n            }}>\r\n                <div className='user'>\r\n                    <div>\r\n                        <span className='usersSpanTitle'>name: </span>\r\n                        <span className='usersSpanDate'> {light(props.user.name)}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='usersSpanTitle'>username: </span>\r\n                        <span className='usersSpanDate'>{light(props.user.username)}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='usersSpanTitle'>email: </span>\r\n                        <span className='usersSpanDate'>{light(props.user.email)}</span>\r\n                    </div>\r\n                </div>\r\n                <button onClick={removeUser} className='button'>Delete</button>\r\n            </div>\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <div>\r\n                    <h3>Address: </h3>\r\n                    <div>\r\n                        <span className='modalTitle'>street: </span>\r\n                        <span>{props.user.address.street}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>suite: </span>\r\n                        <span>{props.user.address.suite}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>city: </span>\r\n                        <span>{props.user.address.city}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>zipcode: </span>\r\n                        <span>{props.user.address.zipcode}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>geo.lat: </span>\r\n                        <span>{props.user.address.geo.lat}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>geo.lng: </span>\r\n                        <span>{props.user.address.geo.lng}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h3>Company:</h3>\r\n                    <div>\r\n                        <span className='modalTitle'>name: </span>\r\n                        <span>{props.user.company.name}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>catch phrase: </span>\r\n                        <span>{props.user.company.catchPhrase}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='modalTitle'>bs: </span>\r\n                        <span>{props.user.company.bs}</span>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsersTC, removeUserAC, UserType} from \"../Users/users-reducer\";\r\nimport {AppRootStateType} from \"../../store\";\r\nimport {User} from \"../Users/User\";\r\nimport './usersList.css'\r\n\r\nexport const UsersList = () => {\r\n\r\n    const users = useSelector<AppRootStateType, UserType[]>(state => state.users);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchUsersTC()\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    const removeUser = (id: string) => {\r\n        dispatch(removeUserAC(id))\r\n    }\r\n\r\n\r\n    const resetUsers = () => {\r\n        dispatch(fetchUsersTC())\r\n    }\r\n\r\n\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target\r\n        setFilter(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"search-wrapper\"}>\r\n                <input type=\"text\" onChange={handleChange}\r\n                       value={filter} placeholder='Search' className='inputUsersList'/>\r\n            </div>\r\n\r\n            <button onClick={resetUsers} className='usersListButton'>Reset</button>\r\n\r\n            {users.map((u: UserType) => {\r\n                return (\r\n                    <User user={u} removeUser={removeUser} filter={filter} key={u.id}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {UsersList} from './Components/UsersList/UsersList';\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <UsersList/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {UsersReducer} from \"./Components/Users/users-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users: UsersReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './store';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}